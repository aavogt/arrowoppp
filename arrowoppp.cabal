cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           arrowoppp
version:        0.1.0
synopsis:       A preprocessor for C like syntax with IORefs
description:    A preprocessor allowing *x and x->y for IORefs using the monadic-bang plugin.
                > OPTIONS_GHC -F -pgmF arrowoppp -fplugin=MonadicBang
                > data X = X { y "::" IORef Int }
                > x->y           -- !(readIORef x).y "::" IORef Int
                > *x->y          -- !(readIORef !(readIORef x).y) "::" Int
                Only a single is supported with assignment
                > do
                >   let *x = z    -- x <- newIORef $ z
                >   *x = y        -- writeIORef x y
                >   *x <- y       -- writeIORef x =<< y
                It is also possible to supply an additional argument to arrowoppp with the -optF, which allows using a different prefix instead of *. That is,
                > OPTIONS_GHC -F -pgmF arrowoppp -optF v -fplugin=MonadicBang
                will let you write vx instead of *x, and this is more friendly to haskell-language-server, hlint etc., but it is more confusing and there might not be a short prefix available.
                To run the tests `ghcid -Ttest`
license:        BSD3
license-file:   LICENSE
build-type:     Simple

executable arrowoppp
  main-is: main.hs
  other-modules:
      Paths_arrowoppp
  default-extensions:
      ViewPatterns
      ImplicitParams
      NoMonomorphismRestriction
      ApplicativeDo
      LambdaCase
      RankNTypes
      KindSignatures
      PartialTypeSignatures
      BlockArguments
  ghc-options: -fno-warn-partial-type-signatures
  build-depends:
      base
    , containers
    , hspec
    , lens
    , regex-applicative
  default-language: Haskell2010
